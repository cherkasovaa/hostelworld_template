@import "./color-matrix_2";
@import "./variables2";

@mixin button($button-color) {
  & {
    width: 180px;
    color: $light;
    background: $button-color;
    border-radius: 5px;
    box-shadow: 0 2px 2px 0 rgba(155, 155, 155, 0.5);
    font-family: 'Roboto', sans-serif;
    font-size: 18px;
    font-weight: 500;
    text-align: center;
    padding: 13px 0;
    outline: none;
    border: none;
    box-sizing: border-box;

    &:hover {
      background: darken(desaturate($button-color, 30.00), 8.43);
    }

    &:active {
      background: darken(desaturate($button-color, 46.64), 15.69);
    }
  }
}

@mixin bread-crumbs($default-color-text, $default-color-border) {
  &__list {
    position: relative;

    &::after {
      content: '';
      position: absolute;
      width: 32.2%;
      height: 1px;
      background: lighten($default-color-text, 48.24);
      position: absolute;
      bottom: 0;
      left: 0;
      transform: translate(0px, 14px);
    }
  }

  &__item {
    display: inline-block;
    position: relative;
    margin-right: 33px;

    &:nth-child(2) {
      margin-right: 43px;
    }

    &:nth-child(3) {
      margin-right: 23px;
    }
  }

  &__link {
    @include text-style($fourth-header-size, 500, 0);
    position: relative;
    display: inline-block;
    padding: 0 5px;
    text-decoration: none;
    color: lighten(saturate($default-color-text, 2.35), 30.20);

    &:hover {
      color: $default-color-text;
    }

    &:active::before {
      content: '';
      width: 100%;
      height: 3px;
      background: $default-color-border;
      color: $text;
      position: absolute;
      left: 0;
      bottom: 0;
      transform: translate(0px, 15px);
      z-index: 3;
    }
  }
}

@mixin text-style($f-size, $f-weight, $l-spacing) {
  font-family: 'Roboto', sans-serif;
  font-size: $f-size;
  font-weight: $f-weight;
  letter-spacing: $l-spacing;
}

@mixin custom-checkbox($check-color, $check-bg-color) {
  & {
    display: inline-block;
    width: 30px;
    height: 30px;
    border: 1px solid $border-checkbox-default;
    border-radius: 5px;
    background: $check-color;
    box-sizing: border-box;
    margin-right: 14px;
    position: relative;

    &:hover::after {
      content: url('../img/check.svg');
      position: absolute;
      top: 57%;
      left: 50%;
      transform: translate(-50%, -44%);
      z-index: 5;
    }

    @each $status,
    $color in $color-array {
      &--#{$status}:hover {
        border: 1px solid $color;
        background: $color;
      }

      &--#{$status}:active {
        border: 1px solid $color;
        background: $color;
      }

      &__check:checked~&--#{$status} {
        border: 1px solid $color;
        background: $color;
      }
    }
  }
}

@mixin custom-paginator($color-text, $default-color, $paginator-bg-color) {
  width: 50px;
  height: 50px;
  margin-right: 20px;
  border-radius: 5px;
  background-color: darken($default-color, 3.53);

  &:not(:first-child)>* {
    color: $color-text;
  }

  &:not(:first-child):hover {
    background-color: darken($default-color, 12.16);
  }

  &:not(:first-child):active {
    background-color: $paginator-bg-color;

    &>* {
      color: $light;
    }
  }
}

@mixin custom-paginator-arrow($color-arrow-bg, $default-color, $paginator-bg-color) {
  & {
    display: inline-block;
    width: 23px;
    height: 3px;
    background: $color-arrow-bg;
    position: relative;
    top: 30%;
    left: 50%;

    &--prev {
      transform: translate(-50%, -50%);
    }

    &--next {
      transform: translate(-50%, -50%) rotate(180deg);
    }

    *:not(:first-child):active>& {
      background: $light;
    }

    &::after {
      content: '';
      position: absolute;
      top: 4px;
      left: 0;
      width: 10px;
      height: 3px;
      transform: rotate(45deg);
      background: inherit;
    }

    &::before {
      content: '';
      position: absolute;
      top: -4px;
      left: 0;
      width: 10px;
      height: 3px;
      transform: rotate(-45deg);
      background: inherit;
    }
  }
}

@mixin size($width, $height) {
  width: $width;
  height: $height;
}
